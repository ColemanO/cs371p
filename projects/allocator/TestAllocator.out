==2979== Memcheck, a memory error detector
==2979== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2979== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==2979== Command: TestAllocator
==2979==
--2979-- run: /usr/bin/dsymutil "./TestAllocator"
warning: no debug symbols in executable (-arch x86_64)
Running main() from gtest_main.cc
[==========] Running 14 tests from 7 test cases.
[----------] Global test environment set-up.
[----------] 2 tests from TestAllocator1/0, where TypeParam = std::__1::allocator<int>
[ RUN      ] TestAllocator1/0.test_1
[       OK ] TestAllocator1/0.test_1 (15 ms)
[ RUN      ] TestAllocator1/0.test_10
[       OK ] TestAllocator1/0.test_10 (8 ms)
[----------] 2 tests from TestAllocator1/0 (31 ms total)

[----------] 2 tests from TestAllocator1/1, where TypeParam = std::__1::allocator<double>
[ RUN      ] TestAllocator1/1.test_1
[       OK ] TestAllocator1/1.test_1 (5 ms)
[ RUN      ] TestAllocator1/1.test_10
[       OK ] TestAllocator1/1.test_10 (6 ms)
[----------] 2 tests from TestAllocator1/1 (11 ms total)

[----------] 2 tests from TestAllocator1/2, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator1/2.test_1
[       OK ] TestAllocator1/2.test_1 (3 ms)
[ RUN      ] TestAllocator1/2.test_10
[       OK ] TestAllocator1/2.test_10 (2 ms)
[----------] 2 tests from TestAllocator1/2 (6 ms total)

[----------] 2 tests from TestAllocator1/3, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator1/3.test_1
[       OK ] TestAllocator1/3.test_1 (4 ms)
[ RUN      ] TestAllocator1/3.test_10
[       OK ] TestAllocator1/3.test_10 (2 ms)
[----------] 2 tests from TestAllocator1/3 (6 ms total)

[----------] 2 tests from TestAllocator2
[ RUN      ] TestAllocator2.const_index
[       OK ] TestAllocator2.const_index (3 ms)
[ RUN      ] TestAllocator2.index
[       OK ] TestAllocator2.index (2 ms)
[----------] 2 tests from TestAllocator2 (5 ms total)

[----------] 2 tests from TestAllocator3/0, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator3/0.test_1
[       OK ] TestAllocator3/0.test_1 (3 ms)
[ RUN      ] TestAllocator3/0.test_10
[       OK ] TestAllocator3/0.test_10 (1 ms)
[----------] 2 tests from TestAllocator3/0 (5 ms total)

[----------] 2 tests from TestAllocator3/1, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator3/1.test_1
[       OK ] TestAllocator3/1.test_1 (2 ms)
[ RUN      ] TestAllocator3/1.test_10
[       OK ] TestAllocator3/1.test_10 (2 ms)
[----------] 2 tests from TestAllocator3/1 (4 ms total)

[----------] Global test environment tear-down
[==========] 14 tests from 7 test cases ran. (103 ms total)
[  PASSED  ] 14 tests.
==2979==
==2979== HEAP SUMMARY:
==2979==     in use at exit: 26,299 bytes in 193 blocks
==2979==   total heap usage: 1,096 allocs, 903 frees, 96,268 bytes allocated
==2979==
==2979== LEAK SUMMARY:
==2979==    definitely lost: 0 bytes in 0 blocks
==2979==    indirectly lost: 0 bytes in 0 blocks
==2979==      possibly lost: 2,064 bytes in 1 blocks
==2979==    still reachable: 0 bytes in 0 blocks
==2979==         suppressed: 24,235 bytes in 192 blocks
==2979== Rerun with --leak-check=full to see details of leaked memory
==2979==
==2979== For counts of detected and suppressed errors, rerun with: -v
==2979== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
gcov -b TestAllocator.c++ | grep -A 5 "File '.*Allocator.h'"
File './Allocator.h'
Lines executed:61.54% of 13
Branches executed:40.00% of 20
Taken at least once:20.00% of 20
No calls
./Allocator.h:creating 'Allocator.h.gcov'
gcov -b TestAllocator.c++ | grep -A 5 "File '.*TestAllocator.c++'"
File 'TestAllocator.c++'
Lines executed:68.57% of 70
Branches executed:31.49% of 362
Taken at least once:17.13% of 362
No calls
TestAllocator.c++:creating 'TestAllocator.c++.gcov'
